#!/usr/bin/env python

###
### This file is generated automatically by SALOME v9.7.0 with dump python functionality
###

import sys
import salome

salome.salome_init()
import salome_notebook
notebook = salome_notebook.NoteBook()
sys.path.insert(0, r'/home/nafaryus/projects/anisotropy/playground')

###
### GEOM component
###

import GEOM
from salome.geom import geomBuilder
import math
import SALOMEDS


geompy = geomBuilder.New()

O = geompy.MakeVertex(0, 0, 0)
OX = geompy.MakeVectorDXDYDZ(1, 0, 0)
OY = geompy.MakeVectorDXDYDZ(0, 1, 0)
OZ = geompy.MakeVectorDXDYDZ(0, 0, 1)
Box_1 = geompy.MakeBoxDXDYDZ(1, 1, 1)
Fillet_1 = geompy.MakeFilletR1R2(Box_1, 0.2, 0.5, geompy.ShapeType["EDGE"], [18])
Group_1 = geompy.CreateGroup(Fillet_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(Group_1, [13])
Group_2 = geompy.CreateGroup(Fillet_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(Group_2, [37])
Group_3 = geompy.CreateGroup(Fillet_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(Group_3, [3])
Group_4 = geompy.CreateGroup(Fillet_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(Group_4, [27])
Group_5 = geompy.CreateGroup(Fillet_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(Group_5, [32])
Group_6 = geompy.CreateGroup(Fillet_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(Group_6, [40])
Group_7 = geompy.CreateGroup(Fillet_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(Group_7, [22])
[Group_1, Group_2, Group_3, Group_4, Group_5, Group_6, Group_7] = geompy.GetExistingSubObjects(Fillet_1, False)
geomObj_1 = geompy.MakeVertex(0, 0, 0)

sk = geompy.Sketcher3D()
sk.addPointsAbsolute(2.0000000, 0.0000000, 0.0000000)
sk.addPointsAbsolute(0.0000000, 2.0000000, 0.0000000)
sk.addPointsAbsolute(0.0000000, 2.0000000, 2.0000000)
sk.addPointsAbsolute(2.0000000, 0.0000000, 2.0000000)
sk.addPointsAbsolute(2.0000000, 0.0000000, 0.0000000)
geomObj_2 = sk.wire()
geomObj_3 = geompy.MakeFaceWires([geomObj_2], 1)
geomObj_4 = geompy.GetNormal(geomObj_3)
geomObj_5 = geompy.MakePrismVecH(geomObj_3, geomObj_4, 2.82842712474619)
geomObj_6 = geompy.MakeScaleTransform(geomObj_3, geomObj_1, 100)
geomObj_7 = geompy.MakeScaleTransform(geomObj_5, geomObj_1, 100)
[geomObj_8,geomObj_9,geomObj_10,geomObj_11,geomObj_12,geomObj_13] = geompy.ExtractShapes(geomObj_7, geompy.ShapeType["FACE"], False)
geomObj_14 = geompy.GetNormal(geomObj_8)
geomObj_15 = geompy.GetNormal(geomObj_9)
geomObj_16 = geompy.GetNormal(geomObj_10)
geomObj_17 = geompy.GetNormal(geomObj_11)
geomObj_18 = geompy.GetNormal(geomObj_12)
geomObj_19 = geompy.GetNormal(geomObj_13)
geomObj_20 = geompy.MakeVectorDXDYDZ(1, 0, 0)
geomObj_21 = geompy.MakeVectorDXDYDZ(0, 1, 0)
geomObj_22 = geompy.MakeVectorDXDYDZ(0, 0, 1)
geomObj_23 = geompy.MakeSphereR(1.298701298701299)
geomObj_24 = geompy.MakeMultiTranslation2D(geomObj_23, geomObj_20, 2, 3, geomObj_21, 2, 3)
geomObj_25 = geompy.MakeMultiTranslation1D(geomObj_24, geomObj_22, 2, 3)
[geomObj_26,geomObj_27,geomObj_28,geomObj_29,geomObj_30,geomObj_31,geomObj_32,geomObj_33,geomObj_34,geomObj_35,geomObj_36,geomObj_37,geomObj_38,geomObj_39,geomObj_40,geomObj_41,geomObj_42,geomObj_43,geomObj_44,geomObj_45,geomObj_46,geomObj_47,geomObj_48,geomObj_49,geomObj_50,geomObj_51,geomObj_52] = geompy.ExtractShapes(geomObj_25, geompy.ShapeType["SOLID"], True)
geomObj_53 = geompy.MakeFuseList([geomObj_26, geomObj_27, geomObj_28, geomObj_29, geomObj_30, geomObj_31, geomObj_32, geomObj_33, geomObj_34, geomObj_35, geomObj_36, geomObj_37, geomObj_38, geomObj_39, geomObj_40, geomObj_41, geomObj_42, geomObj_43, geomObj_44, geomObj_45, geomObj_46, geomObj_47, geomObj_48, geomObj_49, geomObj_50, geomObj_51, geomObj_52], False, False)
geomObj_54 = geompy.MakeScaleTransform(geomObj_53, geomObj_1, 100)
geomObj_55 = geompy.MakeScaleTransform(geomObj_54, geomObj_1, 0.01)
geomObj_56 = geompy.MakeFilletAll(geomObj_54, 3)
geomObj_57 = geompy.MakeScaleTransform(geomObj_56, geomObj_1, 0.01)
geomObj_58 = geompy.MakeCutList(geomObj_7, [geomObj_56])
simple = geompy.MakeScaleTransform(geomObj_58, geomObj_1, 0.01)
[geomObj_59] = geompy.ExtractShapes(simple, geompy.ShapeType["SHELL"], True)
geomObj_60 = geompy.CreateGroup(simple, geompy.ShapeType["FACE"])
geompy.UnionIDs(geomObj_60, [3, 17, 32, 39, 44, 68, 73, 82, 87, 96, 105, 112, 115, 124, 127, 134, 139, 144, 150, 152, 159, 164, 169, 176, 185, 194, 197, 213, 216, 225, 228, 237, 242, 247, 258, 261, 268, 271, 274, 279, 284, 288, 290, 293])
inlet = geompy.CreateGroup(simple, geompy.ShapeType["FACE"])
geomObj_61 = geompy.MakeCutList(geomObj_6, [geomObj_56])
geomObj_62 = geompy.MakeVertex(0, 0, 0)
geomObj_63 = geompy.MakeScaleTransform(geomObj_61, geomObj_62, 0.01)
geomObj_64 = geompy.GetInPlace(simple, geomObj_63, True)
[geomObj_65] = geompy.SubShapeAll(geomObj_64, geompy.ShapeType["FACE"])
geompy.UnionList(inlet, [geomObj_65])
outlet = geompy.CreateGroup(simple, geompy.ShapeType["FACE"])
geomObj_66 = geompy.MakeCutList(geomObj_13, [geomObj_56])
geomObj_67 = geompy.MakeVertex(0, 0, 0)
geomObj_68 = geompy.MakeScaleTransform(geomObj_66, geomObj_67, 0.01)
geomObj_69 = geompy.GetInPlace(simple, geomObj_68, True)
[geomObj_70] = geompy.SubShapeAll(geomObj_69, geompy.ShapeType["FACE"])
geompy.UnionList(outlet, [geomObj_70])
symetry0 = geompy.CreateGroup(simple, geompy.ShapeType["FACE"])
geomObj_71 = geompy.MakeCutList(geomObj_8, [geomObj_56])
geomObj_72 = geompy.MakeVertex(0, 0, 0)
geomObj_73 = geompy.MakeScaleTransform(geomObj_71, geomObj_72, 0.01)
geomObj_74 = geompy.GetInPlace(simple, geomObj_73, True)
[geomObj_75,geomObj_76,geomObj_77,geomObj_78] = geompy.SubShapeAll(geomObj_74, geompy.ShapeType["FACE"])
geompy.UnionList(symetry0, [geomObj_75, geomObj_76, geomObj_77, geomObj_78])
symetry1 = geompy.CreateGroup(simple, geompy.ShapeType["FACE"])
geomObj_79 = geompy.MakeCutList(geomObj_9, [geomObj_56])
geomObj_80 = geompy.MakeVertex(0, 0, 0)
geomObj_81 = geompy.MakeScaleTransform(geomObj_79, geomObj_80, 0.01)
geomObj_82 = geompy.GetInPlace(simple, geomObj_81, True)
[geomObj_83] = geompy.SubShapeAll(geomObj_82, geompy.ShapeType["FACE"])
geompy.UnionList(symetry1, [geomObj_83])
symetry2 = geompy.CreateGroup(simple, geompy.ShapeType["FACE"])
geomObj_84 = geompy.MakeCutList(geomObj_10, [geomObj_56])
geomObj_85 = geompy.MakeVertex(0, 0, 0)
geomObj_86 = geompy.MakeScaleTransform(geomObj_84, geomObj_85, 0.01)
geomObj_87 = geompy.GetInPlace(simple, geomObj_86, True)
[geomObj_88,geomObj_89,geomObj_90,geomObj_91] = geompy.SubShapeAll(geomObj_87, geompy.ShapeType["FACE"])
geompy.UnionList(symetry2, [geomObj_88, geomObj_89, geomObj_90, geomObj_91])
symetry3 = geompy.CreateGroup(simple, geompy.ShapeType["FACE"])
geomObj_92 = geompy.MakeCutList(geomObj_11, [geomObj_56])
geomObj_93 = geompy.MakeVertex(0, 0, 0)
geomObj_94 = geompy.MakeScaleTransform(geomObj_92, geomObj_93, 0.01)
geomObj_95 = geompy.GetInPlace(simple, geomObj_94, True)
[geomObj_96] = geompy.SubShapeAll(geomObj_95, geompy.ShapeType["FACE"])
geompy.UnionList(symetry3, [geomObj_96])
strips = geompy.CreateGroup(simple, geompy.ShapeType["FACE"])
geomObj_97 = geompy.MakeCutList(geomObj_59, [inlet, outlet, symetry0, symetry1, symetry2, symetry3, geomObj_55])
geomObj_98 = geompy.GetInPlace(simple, geomObj_97, True)
[geomObj_99,geomObj_100,geomObj_101,geomObj_102,geomObj_103,geomObj_104,geomObj_105,geomObj_106,geomObj_107,geomObj_108,geomObj_109,geomObj_110,geomObj_111,geomObj_112,geomObj_113,geomObj_114,geomObj_115,geomObj_116,geomObj_117,geomObj_118] = geompy.SubShapeAll(geomObj_98, geompy.ShapeType["FACE"])
geompy.UnionList(strips, [geomObj_99, geomObj_100, geomObj_101, geomObj_102, geomObj_103, geomObj_104, geomObj_105, geomObj_106, geomObj_107, geomObj_108, geomObj_109, geomObj_110, geomObj_111, geomObj_112, geomObj_113, geomObj_114, geomObj_115, geomObj_116, geomObj_117, geomObj_118])
wall = geompy.CutListOfGroups([geomObj_60], [inlet, outlet, symetry0, symetry1, symetry2, symetry3, strips])
[geomObj_60, inlet, geomObj_64, outlet, geomObj_69, symetry0, geomObj_74, symetry1, geomObj_82, symetry2, geomObj_87, symetry3, geomObj_95, geomObj_59, strips, geomObj_98, wall] = geompy.GetExistingSubObjects(simple, False)
geomObj_119 = geompy.MakeVertex(0, 0, 0)

sk = geompy.Sketcher3D()
sk.addPointsAbsolute(2.0000000, 0.0000000, 0.0000000)
sk.addPointsAbsolute(0.0000000, 2.0000000, 0.0000000)
sk.addPointsAbsolute(0.0000000, 2.0000000, 2.0000000)
sk.addPointsAbsolute(2.0000000, 0.0000000, 2.0000000)
sk.addPointsAbsolute(2.0000000, 0.0000000, 0.0000000)
geomObj_120 = sk.wire()
geomObj_121 = geompy.MakeFaceWires([geomObj_120], 1)
geomObj_122 = geompy.GetNormal(geomObj_121)
geomObj_123 = geompy.MakePrismVecH(geomObj_121, geomObj_122, 2.82842712474619)
geomObj_124 = geompy.MakeScaleTransform(geomObj_121, geomObj_119, 100)
geomObj_125 = geompy.MakeScaleTransform(geomObj_123, geomObj_119, 100)
[geomObj_126,geomObj_127,geomObj_128,geomObj_129,geomObj_130,geomObj_131] = geompy.ExtractShapes(geomObj_125, geompy.ShapeType["FACE"], False)
geomObj_132 = geompy.GetNormal(geomObj_126)
geomObj_133 = geompy.GetNormal(geomObj_127)
geomObj_134 = geompy.GetNormal(geomObj_128)
geomObj_135 = geompy.GetNormal(geomObj_129)
geomObj_136 = geompy.GetNormal(geomObj_130)
geomObj_137 = geompy.GetNormal(geomObj_131)
geomObj_138 = geompy.MakeVectorDXDYDZ(1, 0, 0)
geomObj_139 = geompy.MakeVectorDXDYDZ(0, 1, 0)
geomObj_140 = geompy.MakeVectorDXDYDZ(0, 0, 1)
geomObj_141 = geompy.MakeSphereR(1.388888888888889)
geomObj_142 = geompy.MakeMultiTranslation2D(geomObj_141, geomObj_138, 2, 3, geomObj_139, 2, 3)
geomObj_143 = geompy.MakeMultiTranslation1D(geomObj_142, geomObj_140, 2, 3)
[geomObj_144,geomObj_145,geomObj_146,geomObj_147,geomObj_148,geomObj_149,geomObj_150,geomObj_151,geomObj_152,geomObj_153,geomObj_154,geomObj_155,geomObj_156,geomObj_157,geomObj_158,geomObj_159,geomObj_160,geomObj_161,geomObj_162,geomObj_163,geomObj_164,geomObj_165,geomObj_166,geomObj_167,geomObj_168,geomObj_169,geomObj_170] = geompy.ExtractShapes(geomObj_143, geompy.ShapeType["SOLID"], True)
geomObj_171 = geompy.MakeFuseList([geomObj_144, geomObj_145, geomObj_146, geomObj_147, geomObj_148, geomObj_149, geomObj_150, geomObj_151, geomObj_152, geomObj_153, geomObj_154, geomObj_155, geomObj_156, geomObj_157, geomObj_158, geomObj_159, geomObj_160, geomObj_161, geomObj_162, geomObj_163, geomObj_164, geomObj_165, geomObj_166, geomObj_167, geomObj_168, geomObj_169, geomObj_170], False, False)
geomObj_172 = geompy.MakeScaleTransform(geomObj_171, geomObj_119, 100)
geomObj_173 = geompy.MakeScaleTransform(geomObj_172, geomObj_119, 0.01)
geomObj_174 = geompy.MakeFilletAll(geomObj_172, 1)
geomObj_175 = geompy.MakeScaleTransform(geomObj_174, geomObj_119, 0.01)
geomObj_176 = geompy.MakeCutList(geomObj_125, [geomObj_174])
simple_1 = geompy.MakeScaleTransform(geomObj_176, geomObj_119, 0.01)
[geomObj_177] = geompy.ExtractShapes(simple_1, geompy.ShapeType["SHELL"], True)
geomObj_178 = geompy.CreateGroup(simple_1, geompy.ShapeType["FACE"])
geompy.UnionIDs(geomObj_178, [3, 17, 32, 39, 44, 68, 73, 82, 87, 96, 105, 112, 115, 124, 127, 134, 139, 144, 150, 152, 159, 164, 169, 176, 185, 194, 197, 213, 216, 225, 228, 237, 242, 247, 258, 261, 268, 271, 274, 279, 284, 288, 290, 293])
inlet_1 = geompy.CreateGroup(simple_1, geompy.ShapeType["FACE"])
geomObj_179 = geompy.MakeCutList(geomObj_124, [geomObj_174])
geomObj_180 = geompy.MakeVertex(0, 0, 0)
geomObj_181 = geompy.MakeScaleTransform(geomObj_179, geomObj_180, 0.01)
geomObj_182 = geompy.GetInPlace(simple_1, geomObj_181, True)
[geomObj_183] = geompy.SubShapeAll(geomObj_182, geompy.ShapeType["FACE"])
geompy.UnionList(inlet_1, [geomObj_183])
outlet_1 = geompy.CreateGroup(simple_1, geompy.ShapeType["FACE"])
geomObj_184 = geompy.MakeCutList(geomObj_131, [geomObj_174])
geomObj_185 = geompy.MakeVertex(0, 0, 0)
geomObj_186 = geompy.MakeScaleTransform(geomObj_184, geomObj_185, 0.01)
geomObj_187 = geompy.GetInPlace(simple_1, geomObj_186, True)
[geomObj_188] = geompy.SubShapeAll(geomObj_187, geompy.ShapeType["FACE"])
geompy.UnionList(outlet_1, [geomObj_188])
symetry0_1 = geompy.CreateGroup(simple_1, geompy.ShapeType["FACE"])
geomObj_189 = geompy.MakeCutList(geomObj_126, [geomObj_174])
geomObj_190 = geompy.MakeVertex(0, 0, 0)
geomObj_191 = geompy.MakeScaleTransform(geomObj_189, geomObj_190, 0.01)
geomObj_192 = geompy.GetInPlace(simple_1, geomObj_191, True)
[geomObj_193,geomObj_194,geomObj_195,geomObj_196] = geompy.SubShapeAll(geomObj_192, geompy.ShapeType["FACE"])
geompy.UnionList(symetry0_1, [geomObj_193, geomObj_194, geomObj_195, geomObj_196])
symetry1_1 = geompy.CreateGroup(simple_1, geompy.ShapeType["FACE"])
geomObj_197 = geompy.MakeCutList(geomObj_127, [geomObj_174])
geomObj_198 = geompy.MakeVertex(0, 0, 0)
geomObj_199 = geompy.MakeScaleTransform(geomObj_197, geomObj_198, 0.01)
geomObj_200 = geompy.GetInPlace(simple_1, geomObj_199, True)
[geomObj_201] = geompy.SubShapeAll(geomObj_200, geompy.ShapeType["FACE"])
geompy.UnionList(symetry1_1, [geomObj_201])
symetry2_1 = geompy.CreateGroup(simple_1, geompy.ShapeType["FACE"])
geomObj_202 = geompy.MakeCutList(geomObj_128, [geomObj_174])
geomObj_203 = geompy.MakeVertex(0, 0, 0)
geomObj_204 = geompy.MakeScaleTransform(geomObj_202, geomObj_203, 0.01)
geomObj_205 = geompy.GetInPlace(simple_1, geomObj_204, True)
[geomObj_206,geomObj_207,geomObj_208,geomObj_209] = geompy.SubShapeAll(geomObj_205, geompy.ShapeType["FACE"])
geompy.UnionList(symetry2_1, [geomObj_206, geomObj_207, geomObj_208, geomObj_209])
symetry3_1 = geompy.CreateGroup(simple_1, geompy.ShapeType["FACE"])
geomObj_210 = geompy.MakeCutList(geomObj_129, [geomObj_174])
geomObj_211 = geompy.MakeVertex(0, 0, 0)
geomObj_212 = geompy.MakeScaleTransform(geomObj_210, geomObj_211, 0.01)
geomObj_213 = geompy.GetInPlace(simple_1, geomObj_212, True)
[geomObj_214] = geompy.SubShapeAll(geomObj_213, geompy.ShapeType["FACE"])
geompy.UnionList(symetry3_1, [geomObj_214])
strips_1 = geompy.CreateGroup(simple_1, geompy.ShapeType["FACE"])
geomObj_215 = geompy.MakeCutList(geomObj_177, [inlet_1, outlet_1, symetry0_1, symetry1_1, symetry2_1, symetry3_1, geomObj_173])
geomObj_216 = geompy.GetInPlace(simple_1, geomObj_215, True)
[geomObj_217,geomObj_218,geomObj_219,geomObj_220,geomObj_221,geomObj_222,geomObj_223,geomObj_224,geomObj_225,geomObj_226,geomObj_227,geomObj_228,geomObj_229,geomObj_230,geomObj_231,geomObj_232,geomObj_233,geomObj_234,geomObj_235,geomObj_236] = geompy.SubShapeAll(geomObj_216, geompy.ShapeType["FACE"])
geompy.UnionList(strips_1, [geomObj_217, geomObj_218, geomObj_219, geomObj_220, geomObj_221, geomObj_222, geomObj_223, geomObj_224, geomObj_225, geomObj_226, geomObj_227, geomObj_228, geomObj_229, geomObj_230, geomObj_231, geomObj_232, geomObj_233, geomObj_234, geomObj_235, geomObj_236])
wall_1 = geompy.CutListOfGroups([geomObj_178], [inlet_1, outlet_1, symetry0_1, symetry1_1, symetry2_1, symetry3_1, strips_1])
[geomObj_178, inlet_1, geomObj_182, outlet_1, geomObj_187, symetry0_1, geomObj_192, symetry1_1, geomObj_200, symetry2_1, geomObj_205, symetry3_1, geomObj_213, geomObj_177, strips_1, geomObj_216, wall_1] = geompy.GetExistingSubObjects(simple_1, False)
geompy.addToStudy( O, 'O' )
geompy.addToStudy( OX, 'OX' )
geompy.addToStudy( OY, 'OY' )
geompy.addToStudy( OZ, 'OZ' )
geompy.addToStudy( Box_1, 'Box_1' )
geompy.addToStudy( Fillet_1, 'Fillet_1' )
geompy.addToStudyInFather( Fillet_1, Group_1, 'Group_1' )
geompy.addToStudyInFather( Fillet_1, Group_2, 'Group_2' )
geompy.addToStudyInFather( Fillet_1, Group_3, 'Group_3' )
geompy.addToStudyInFather( Fillet_1, Group_4, 'Group_4' )
geompy.addToStudyInFather( Fillet_1, Group_5, 'Group_5' )
geompy.addToStudyInFather( Fillet_1, Group_6, 'Group_6' )
geompy.addToStudyInFather( Fillet_1, Group_7, 'Group_7' )
geompy.addToStudy( simple, 'simple' )
geompy.addToStudyInFather( simple, inlet, 'inlet' )
geompy.addToStudyInFather( simple, outlet, 'outlet' )
geompy.addToStudyInFather( simple, symetry0, 'symetry0' )
geompy.addToStudyInFather( simple, symetry1, 'symetry1' )
geompy.addToStudyInFather( simple, symetry2, 'symetry2' )
geompy.addToStudyInFather( simple, symetry3, 'symetry3' )
geompy.addToStudyInFather( simple, strips, 'strips' )
geompy.addToStudyInFather( simple, wall, 'wall' )
geompy.addToStudy( simple_1, 'simple' )
geompy.addToStudyInFather( simple_1, inlet_1, 'inlet' )
geompy.addToStudyInFather( simple_1, outlet_1, 'outlet' )
geompy.addToStudyInFather( simple_1, symetry0_1, 'symetry0' )
geompy.addToStudyInFather( simple_1, symetry1_1, 'symetry1' )
geompy.addToStudyInFather( simple_1, symetry2_1, 'symetry2' )
geompy.addToStudyInFather( simple_1, symetry3_1, 'symetry3' )
geompy.addToStudyInFather( simple_1, strips_1, 'strips' )
geompy.addToStudyInFather( simple_1, wall_1, 'wall' )

###
### SMESH component
###

import  SMESH, SALOMEDS
from salome.smesh import smeshBuilder

smesh = smeshBuilder.New()
#smesh.SetEnablePublish( False ) # Set to False to avoid publish in study if not needed or in some particular situations:
                                 # multiples meshes built in parallel, complex and numerous mesh edition (performance)

Mesh_1 = smesh.Mesh(Fillet_1)
GMSH = Mesh_1.Tetrahedron(algo=smeshBuilder.GMSH)
Gmsh_Parameters = GMSH.Parameters()
Gmsh_Parameters.Set2DAlgo( 0 )
Gmsh_Parameters.SetMinSize( 0 )
Gmsh_Parameters.SetMaxSize( 0.5 )
Gmsh_Parameters.SetIs2d( 0 )
Group_1_1 = Mesh_1.GroupOnGeom(Group_1,'Group_1',SMESH.FACE)
Group_2_1 = Mesh_1.GroupOnGeom(Group_2,'Group_2',SMESH.FACE)
Group_3_1 = Mesh_1.GroupOnGeom(Group_3,'Group_3',SMESH.FACE)
Group_4_1 = Mesh_1.GroupOnGeom(Group_4,'Group_4',SMESH.FACE)
Group_5_1 = Mesh_1.GroupOnGeom(Group_5,'Group_5',SMESH.FACE)
Group_6_1 = Mesh_1.GroupOnGeom(Group_6,'Group_6',SMESH.FACE)
Group_7_1 = Mesh_1.GroupOnGeom(Group_7,'Group_7',SMESH.FACE)
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
Gmsh_Parameters.SetMinSize( 0.15307 )
Gmsh_Parameters.SetMaxSize( 0.17443 )
Gmsh_Parameters.SetIs2d( 0 )
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(GMSH)
PolyhedronPerSolid_3D = Mesh_1.Polyhedron()
status = Mesh_1.RemoveHypothesis(Gmsh_Parameters)
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
NETGEN_1D_2D = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_1D2D)
NETGEN_2D_Parameters_1 = NETGEN_1D_2D.Parameters()
NETGEN_2D_Parameters_1.SetMaxSize( 0.173205 )
NETGEN_2D_Parameters_1.SetMinSize( 0.0147777 )
NETGEN_2D_Parameters_1.SetSecondOrder( 0 )
NETGEN_2D_Parameters_1.SetOptimize( 1 )
NETGEN_2D_Parameters_1.SetFineness( 2 )
NETGEN_2D_Parameters_1.SetChordalError( -1 )
NETGEN_2D_Parameters_1.SetChordalErrorEnabled( 0 )
NETGEN_2D_Parameters_1.SetUseSurfaceCurvature( 1 )
NETGEN_2D_Parameters_1.SetFuseEdges( 1 )
NETGEN_2D_Parameters_1.SetWorstElemMeasure( 0 )
NETGEN_2D_Parameters_1.SetUseDelauney( 0 )
NETGEN_2D_Parameters_1.SetQuadAllowed( 0 )
NETGEN_2D_Parameters_1.SetCheckChartBoundary( 16 )
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(NETGEN_1D_2D)
status = Mesh_1.RemoveHypothesis(PolyhedronPerSolid_3D)
status = Mesh_1.RemoveHypothesis(NETGEN_2D_Parameters_1)
Prism_3D = Mesh_1.Prism()
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
UseExisting_1D = Mesh_1.UseExistingSegments()
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(UseExisting_1D)
Regular_1D = Mesh_1.Segment()
Number_of_Segments_1 = Regular_1D.NumberOfSegments(15)
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(Regular_1D)
status = Mesh_1.RemoveHypothesis(Prism_3D)
status = Mesh_1.RemoveHypothesis(Number_of_Segments_1)
Hexa_3D = Mesh_1.Hexahedron(algo=smeshBuilder.Hexa)
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
Quadrangle_2D = Mesh_1.Quadrangle(algo=smeshBuilder.QUADRANGLE)
Quadrangle_Parameters_1 = Quadrangle_2D.QuadrangleParameters(smeshBuilder.QUAD_QUADRANGLE_PREF,-1,[],[])
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
Renumber_1 = Hexa_3D.Renumber()
Renumber_1.SetBlocksOrientation([  ])
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
Regular_1D_1 = Mesh_1.Segment()
Number_of_Segments_2 = Regular_1D.NumberOfSegments(15)
status = Mesh_1.RemoveHypothesis(Renumber_1)
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
SegmentAroundVertex_0D = smesh.CreateHypothesis('SegmentAroundVertex_0D')
Length_Near_Vertex_1 = Regular_1D.LengthNearVertex(0.1,Fillet_1)
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(Quadrangle_2D)
status = Mesh_1.RemoveHypothesis(Hexa_3D)
MEFISTO_2D = Mesh_1.Triangle(algo=smeshBuilder.MEFISTO)
status = Mesh_1.RemoveHypothesis(Quadrangle_Parameters_1)
Max_Element_Area_1 = MEFISTO_2D.MaxElementArea(0.03)
MG_Tetra = Mesh_1.Tetrahedron(algo=smeshBuilder.MG_Tetra)
MG_Tetra_Parameters_1 = MG_Tetra.Parameters()
MG_Tetra_Parameters_1.SetOptimizationLevel( 2 )
MG_Tetra_Parameters_1.SetToMeshHoles( 0 )
MG_Tetra_Parameters_1.SetToMakeGroupsOfDomains( 0 )
MG_Tetra_Parameters_1.SetMaximumMemory( -1 )
MG_Tetra_Parameters_1.SetInitialMemory( -1 )
MG_Tetra_Parameters_1.SetKeepFiles( 0 )
MG_Tetra_Parameters_1.SetWorkingDirectory( '/tmp/' )
MG_Tetra_Parameters_1.SetVerboseLevel( 10 )
MG_Tetra_Parameters_1.SetStandardOutputLog( 0 )
MG_Tetra_Parameters_1.SetRemoveLogOnSuccess( 0 )
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(MG_Tetra)
NETGEN_3D = Mesh_1.Tetrahedron()
status = Mesh_1.RemoveHypothesis(MG_Tetra_Parameters_1)
NETGEN_3D_Parameters_1 = NETGEN_3D.Parameters()
NETGEN_3D_Parameters_1.SetMaxSize( 0.173205 )
NETGEN_3D_Parameters_1.SetMinSize( 0.0147777 )
NETGEN_3D_Parameters_1.SetOptimize( 1 )
NETGEN_3D_Parameters_1.SetFineness( 2 )
NETGEN_3D_Parameters_1.SetElemSizeWeight( -5.29735e+296 )
NETGEN_3D_Parameters_1.SetCheckOverlapping( 0 )
NETGEN_3D_Parameters_1.SetCheckChartBoundary( 16 )
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
NETGEN_1D_2D_1 = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_1D2D,geom=Group_7)
NETGEN_2D_Parameters_2 = NETGEN_1D_2D_1.Parameters()
NETGEN_2D_Parameters_2.SetMaxSize( 0.173205 )
NETGEN_2D_Parameters_2.SetMinSize( 0.015262 )
NETGEN_2D_Parameters_2.SetSecondOrder( 0 )
NETGEN_2D_Parameters_2.SetOptimize( 1 )
NETGEN_2D_Parameters_2.SetFineness( 2 )
NETGEN_2D_Parameters_2.SetChordalError( -1 )
NETGEN_2D_Parameters_2.SetChordalErrorEnabled( 0 )
NETGEN_2D_Parameters_2.SetUseSurfaceCurvature( 1 )
NETGEN_2D_Parameters_2.SetFuseEdges( 1 )
NETGEN_2D_Parameters_2.SetWorstElemMeasure( 0 )
NETGEN_2D_Parameters_2.SetUseDelauney( 0 )
NETGEN_2D_Parameters_2.SetQuadAllowed( 0 )
NETGEN_2D_Parameters_2.SetCheckChartBoundary( 112 )
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(NETGEN_1D_2D,Group_7)
Regular_1D_2 = Mesh_1.Segment(geom=Group_7)
Max_Size_1 = Regular_1D_2.MaxSize(0.01)
NETGEN_2D = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_2D,geom=Group_7)
status = Mesh_1.RemoveHypothesis(NETGEN_2D_Parameters_2,Group_7)
Length_From_Edges_1 = NETGEN_2D.LengthFromEdges()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(MEFISTO_2D)
status = Mesh_1.RemoveHypothesis(Number_of_Segments_2)
Deflection_1 = Regular_1D.Deflection1D(0.001)
NETGEN_2D_1 = Mesh_1.Triangle(algo=smeshBuilder.NETGEN_2D)
status = Mesh_1.RemoveHypothesis(Max_Element_Area_1)
Max_Element_Area_2 = MEFISTO_2D.MaxElementArea(0.05)
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(Length_From_Edges_1,Group_7)
Max_Element_Area_3 = NETGEN_2D.MaxElementArea(0.01)
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(Max_Element_Area_3,Group_7)
NETGEN_2D_Parameters_1_1 = NETGEN_2D.Parameters()
NETGEN_2D_Parameters_1_1.SetMaxSize( 0.173205 )
NETGEN_2D_Parameters_1_1.SetMinSize( 0.015262 )
NETGEN_2D_Parameters_1_1.SetOptimize( 1 )
NETGEN_2D_Parameters_1_1.SetFineness( 2 )
NETGEN_2D_Parameters_1_1.SetChordalError( -1 )
NETGEN_2D_Parameters_1_1.SetChordalErrorEnabled( 0 )
NETGEN_2D_Parameters_1_1.SetUseSurfaceCurvature( 1 )
NETGEN_2D_Parameters_1_1.SetWorstElemMeasure( 0 )
NETGEN_2D_Parameters_1_1.SetUseDelauney( 0 )
NETGEN_2D_Parameters_1_1.SetCheckChartBoundary( 0 )
NETGEN_2D_Parameters_1_1.SetQuadAllowed( 0 )
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
#Mesh_1.GetMesh().RemoveSubMesh( smeshObj_1 ) ### smeshObj_1 has not been yet created
status = Mesh_1.RemoveHypothesis(Length_Near_Vertex_1)
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
Max_Element_Area_2.SetMaxElementArea( 0.01 )
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(NETGEN_3D_Parameters_1)
NETGEN_3D_Parameters_2 = NETGEN_3D.Parameters()
NETGEN_3D_Parameters_2.SetMaxSize( 0.173205 )
NETGEN_3D_Parameters_2.SetMinSize( 0.015262 )
NETGEN_3D_Parameters_2.SetOptimize( 1 )
NETGEN_3D_Parameters_2.SetFineness( 4 )
NETGEN_3D_Parameters_2.SetElemSizeWeight( -5.29735e+296 )
NETGEN_3D_Parameters_2.SetCheckOverlapping( 0 )
NETGEN_3D_Parameters_2.SetCheckChartBoundary( 16 )
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(Deflection_1)
Automatic_Length_1 = Regular_1D.AutomaticLength(1)
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
Automatic_Length_1.SetFineness( 0.5 )
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(Max_Element_Area_2)
Length_From_Edges_2 = MEFISTO_2D.LengthFromEdges()
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
Automatic_Length_1.SetFineness( 0.25 )
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
status = Mesh_1.RemoveHypothesis(Regular_1D)
status = Mesh_1.RemoveHypothesis(NETGEN_2D)
status = Mesh_1.RemoveHypothesis(NETGEN_3D)
status = Mesh_1.RemoveHypothesis(Automatic_Length_1)
status = Mesh_1.RemoveHypothesis(Length_From_Edges_2)
NETGEN_1D_2D_3D = Mesh_1.Tetrahedron(algo=smeshBuilder.NETGEN_1D2D3D)
status = Mesh_1.RemoveHypothesis(NETGEN_3D_Parameters_2)
NETGEN_3D_Simple_Parameters_1 = NETGEN_1D_2D_3D.Parameters(smeshBuilder.SIMPLE)
NETGEN_3D_Simple_Parameters_1.SetNumberOfSegments( 15 )
NETGEN_3D_Simple_Parameters_1.LengthFromEdges()
NETGEN_3D_Simple_Parameters_1.LengthFromFaces()
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
NETGEN_3D_Simple_Parameters_1.SetNumberOfSegments( 3 )
NETGEN_3D_Simple_Parameters_1.LengthFromEdges()
NETGEN_3D_Simple_Parameters_1.LengthFromFaces()
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
NETGEN_3D_Simple_Parameters_1.SetLocalLength( 0.173205 )
NETGEN_3D_Simple_Parameters_1.LengthFromEdges()
NETGEN_3D_Simple_Parameters_1.LengthFromFaces()
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
NETGEN_3D_Simple_Parameters_1.SetNumberOfSegments( 10 )
NETGEN_3D_Simple_Parameters_1.LengthFromEdges()
NETGEN_3D_Simple_Parameters_1.LengthFromFaces()
isDone = Mesh_1.Compute()
[ Group_1_1, Group_2_1, Group_3_1, Group_4_1, Group_5_1, Group_6_1, Group_7_1 ] = Mesh_1.GetGroups()
Mesh_2 = smesh.Mesh(simple)
NETGEN_1D_2D_3D_1 = Mesh_2.Tetrahedron(algo=smeshBuilder.NETGEN_1D2D3D)
NETGEN_3D_Simple_Parameters_2 = NETGEN_1D_2D_3D_1.Parameters(smeshBuilder.SIMPLE)
NETGEN_3D_Simple_Parameters_2.SetNumberOfSegments( 15 )
NETGEN_3D_Simple_Parameters_2.LengthFromEdges()
NETGEN_3D_Simple_Parameters_2.LengthFromFaces()
#Group_1_2 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
inlet_2 = Mesh_2.GroupOnGeom(inlet,'inlet',SMESH.FACE)
#Group_3_2 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
outlet_2 = Mesh_2.GroupOnGeom(outlet,'outlet',SMESH.FACE)
#Group_5_2 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
symetry0_2 = Mesh_2.GroupOnGeom(symetry0,'symetry0',SMESH.FACE)
#Group_7_2 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
symetry1_2 = Mesh_2.GroupOnGeom(symetry1,'symetry1',SMESH.FACE)
#Group_9 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
symetry2_2 = Mesh_2.GroupOnGeom(symetry2,'symetry2',SMESH.FACE)
#Group_11 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
symetry3_2 = Mesh_2.GroupOnGeom(symetry3,'symetry3',SMESH.FACE)
#Group_13 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
#Group_14 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
strips_2 = Mesh_2.GroupOnGeom(strips,'strips',SMESH.FACE)
#Group_16 = Mesh_2.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
wall_2 = Mesh_2.GroupOnGeom(wall,'wall',SMESH.FACE)
isDone = Mesh_2.Compute()
[ Group_1_2, inlet_2, Group_3_2, outlet_2, Group_5_2, symetry0_2, Group_7_2, symetry1_2, Group_9, symetry2_2, Group_11, symetry3_2, Group_13, Group_14, strips_2, Group_16, wall_2 ] = Mesh_2.GetGroups()
Mesh_1.Clear()
CompositeSegment_1D = Mesh_2.Segment(algo=smeshBuilder.COMPOSITE,geom=strips)
Number_of_Segments_3 = CompositeSegment_1D.NumberOfSegments(17)
NETGEN_2D_2 = Mesh_2.Triangle(algo=smeshBuilder.NETGEN_2D,geom=strips)
Length_From_Edges_3 = NETGEN_2D_2.LengthFromEdges()
[ Group_1_2, inlet_2, Group_3_2, outlet_2, Group_5_2, symetry0_2, Group_7_2, symetry1_2, Group_9, symetry2_2, Group_11, symetry3_2, Group_13, Group_14, strips_2, Group_16, wall_2 ] = Mesh_2.GetGroups()
Length_Near_Vertex_2 = CompositeSegment_1D.LengthNearVertex(0.01,strips)
[ Group_1_2, inlet_2, Group_3_2, outlet_2, Group_5_2, symetry0_2, Group_7_2, symetry1_2, Group_9, symetry2_2, Group_11, symetry3_2, Group_13, Group_14, strips_2, Group_16, wall_2 ] = Mesh_2.GetGroups()
status = Mesh_2.RemoveHypothesis(Length_Near_Vertex_2,strips)
status = Mesh_2.RemoveHypothesis(Number_of_Segments_3,strips)
Automatic_Length_2 = CompositeSegment_1D.AutomaticLength(0.633882)
status = Mesh_2.RemoveHypothesis(Length_From_Edges_3,strips)
Length_From_Edges_4 = NETGEN_2D_2.LengthFromEdges()
[ Group_1_2, inlet_2, Group_3_2, outlet_2, Group_5_2, symetry0_2, Group_7_2, symetry1_2, Group_9, symetry2_2, Group_11, symetry3_2, Group_13, Group_14, strips_2, Group_16, wall_2 ] = Mesh_2.GetGroups()
Automatic_Length_2.SetFineness( 1 )
[ Group_1_2, inlet_2, Group_3_2, outlet_2, Group_5_2, symetry0_2, Group_7_2, symetry1_2, Group_9, symetry2_2, Group_11, symetry3_2, Group_13, Group_14, strips_2, Group_16, wall_2 ] = Mesh_2.GetGroups()
status = Mesh_2.RemoveHypothesis(NETGEN_3D_Simple_Parameters_2)
NETGEN_3D_Parameters_1_1 = NETGEN_1D_2D_3D_1.Parameters()
NETGEN_3D_Parameters_1_1.SetMinSize( 0.00326849 )
NETGEN_3D_Parameters_1_1.SetSecondOrder( 0 )
NETGEN_3D_Parameters_1_1.SetOptimize( 1 )
NETGEN_3D_Parameters_1_1.SetUseSurfaceCurvature( 1 )
NETGEN_3D_Parameters_1_1.SetFuseEdges( 1 )
NETGEN_3D_Parameters_1_1.SetQuadAllowed( 0 )
[ Group_1_2, inlet_2, Group_3_2, outlet_2, Group_5_2, symetry0_2, Group_7_2, symetry1_2, Group_9, symetry2_2, Group_11, symetry3_2, Group_13, Group_14, strips_2, Group_16, wall_2 ] = Mesh_2.GetGroups()
NETGEN_3D_Parameters_1_1.SetFineness( 5 )
NETGEN_3D_Parameters_1_1.SetGrowthRate( 0.3 )
NETGEN_3D_Parameters_1_1.SetNbSegPerEdge( 1 )
NETGEN_3D_Parameters_1_1.SetNbSegPerRadius( 2 )
NETGEN_3D_Parameters_1_1.SetChordalErrorEnabled( 1 )
[ Group_1_2, inlet_2, Group_3_2, outlet_2, Group_5_2, symetry0_2, Group_7_2, symetry1_2, Group_9, symetry2_2, Group_11, symetry3_2, Group_13, Group_14, strips_2, Group_16, wall_2 ] = Mesh_2.GetGroups()
NETGEN_3D_Parameters_1_1.SetMaxSize( 0.2 )
NETGEN_3D_Parameters_1_1.SetChordalError( 0.1 )
NETGEN_3D_Parameters_1_1.SetCheckChartBoundary( 0 )
[ Group_1_2, inlet_2, Group_3_2, outlet_2, Group_5_2, symetry0_2, Group_7_2, symetry1_2, Group_9, symetry2_2, Group_11, symetry3_2, Group_13, Group_14, strips_2, Group_16, wall_2 ] = Mesh_2.GetGroups()
status = Mesh_2.RemoveHypothesis(NETGEN_1D_2D_3D)
Regular_1D_3 = Mesh_2.Segment()
Automatic_Length_3 = Regular_1D_3.AutomaticLength(1)
NETGEN_2D_3 = Mesh_2.Triangle(algo=smeshBuilder.NETGEN_2D)
Max_Element_Area_4 = NETGEN_2D_3.MaxElementArea(0.197375)
NETGEN_3D_1 = Mesh_2.Tetrahedron()
status = Mesh_2.RemoveHypothesis(NETGEN_3D_Parameters_1_1)
isDone = Mesh_2.Compute()
[ Group_1_2, inlet_2, Group_3_2, outlet_2, Group_5_2, symetry0_2, Group_7_2, symetry1_2, Group_9, symetry2_2, Group_11, symetry3_2, Group_13, Group_14, strips_2, Group_16, wall_2 ] = Mesh_2.GetGroups()
Mesh_3 = smesh.Mesh(simple_1)
status = Mesh_3.AddHypothesis(Automatic_Length_3)
Regular_1D_4 = Mesh_3.Segment()
status = Mesh_3.AddHypothesis(Max_Element_Area_4)
NETGEN_2D_4 = Mesh_3.Triangle(algo=smeshBuilder.NETGEN_2D)
NETGEN_3D_2 = Mesh_3.Tetrahedron()
#Group_1_3 = Mesh_3.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
inlet_3 = Mesh_3.GroupOnGeom(inlet_1,'inlet',SMESH.FACE)
#Group_3_3 = Mesh_3.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
outlet_3 = Mesh_3.GroupOnGeom(outlet_1,'outlet',SMESH.FACE)
#Group_5_3 = Mesh_3.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
symetry0_3 = Mesh_3.GroupOnGeom(symetry0_1,'symetry0',SMESH.FACE)
#Group_7_3 = Mesh_3.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
symetry1_3 = Mesh_3.GroupOnGeom(symetry1_1,'symetry1',SMESH.FACE)
#Group_9_1 = Mesh_3.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
symetry2_3 = Mesh_3.GroupOnGeom(symetry2_1,'symetry2',SMESH.FACE)
#Group_11_1 = Mesh_3.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
symetry3_3 = Mesh_3.GroupOnGeom(symetry3_1,'symetry3',SMESH.FACE)
#Group_13_1 = Mesh_3.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
#Group_14_1 = Mesh_3.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
strips_3 = Mesh_3.GroupOnGeom(strips_1,'strips',SMESH.FACE)
#Group_16_1 = Mesh_3.GroupOnGeom(__NOT__Published__Object__,'',SMESH.FACE)
wall_3 = Mesh_3.GroupOnGeom(wall_1,'wall',SMESH.FACE)
Regular_1D_5 = Mesh_3.Segment(geom=strips_1)
status = Mesh_3.AddHypothesis(Automatic_Length_2,strips_1)
NETGEN_2D_5 = Mesh_3.Triangle(algo=smeshBuilder.NETGEN_2D,geom=strips_1)
status = Mesh_3.AddHypothesis(Length_From_Edges_4,strips_1)
[ Group_1_3, inlet_3, Group_3_3, outlet_3, Group_5_3, symetry0_3, Group_7_3, symetry1_3, Group_9_1, symetry2_3, Group_11_1, symetry3_3, Group_13_1, Group_14_1, strips_3, Group_16_1, wall_3 ] = Mesh_3.GetGroups()
isDone = Mesh_3.Compute()
[ Group_1_3, inlet_3, Group_3_3, outlet_3, Group_5_3, symetry0_3, Group_7_3, symetry1_3, Group_9_1, symetry2_3, Group_11_1, symetry3_3, Group_13_1, Group_14_1, strips_3, Group_16_1, wall_3 ] = Mesh_3.GetGroups()
Sub_mesh_1 = CompositeSegment_1D.GetSubMesh()
Sub_mesh_2 = Regular_1D_5.GetSubMesh()


## Set names of Mesh objects
smesh.SetName(Automatic_Length_1, 'Automatic Length_1')
smesh.SetName(Length_From_Edges_2, 'Length From Edges_2')
smesh.SetName(Group_16, 'Group_16')
smesh.SetName(wall_2, 'wall')
smesh.SetName(NETGEN_3D_Simple_Parameters_1, 'NETGEN 3D Simple Parameters_1')
smesh.SetName(Group_14, 'Group_14')
smesh.SetName(NETGEN_3D_Simple_Parameters_2, 'NETGEN 3D Simple Parameters_2')
smesh.SetName(strips_2, 'strips')
smesh.SetName(Length_From_Edges_3, 'Length From Edges_3')
smesh.SetName(symetry3_2, 'symetry3')
smesh.SetName(Number_of_Segments_3, 'Number of Segments_3')
smesh.SetName(Group_13, 'Group_13')
smesh.SetName(symetry2_2, 'symetry2')
smesh.SetName(Length_Near_Vertex_2, 'Length Near Vertex_2')
smesh.SetName(Group_11, 'Group_11')
smesh.SetName(Length_From_Edges_4, 'Length From Edges_4')
smesh.SetName(NETGEN_3D_Parameters_1_1, 'NETGEN 3D Parameters_1')
smesh.SetName(Automatic_Length_2, 'Automatic Length_2')
smesh.SetName(Automatic_Length_3, 'Automatic Length_3')
smesh.SetName(Max_Element_Area_4, 'Max. Element Area_4')
smesh.SetName(Length_From_Edges_1, 'Length From Edges_1')
smesh.SetName(NETGEN_2D_Parameters_2, 'NETGEN 2D Parameters_2')
smesh.SetName(NETGEN_3D_Parameters_1, 'NETGEN 3D Parameters_1')
smesh.SetName(Max_Element_Area_1, 'Max. Element Area_1')
smesh.SetName(Max_Element_Area_3, 'Max. Element Area_3')
smesh.SetName(Deflection_1, 'Deflection_1')
smesh.SetName(Max_Element_Area_2, 'Max. Element Area_2')
smesh.SetName(Max_Size_1, 'Max Size_1')
smesh.SetName(NETGEN_3D_Parameters_2, 'NETGEN 3D Parameters_2')
smesh.SetName(NETGEN_2D_Parameters_1_1, 'NETGEN 2D Parameters_1')
smesh.SetName(NETGEN_2D_Parameters_1, 'NETGEN 2D Parameters_1')
smesh.SetName(Number_of_Segments_1, 'Number of Segments_1')
smesh.SetName(Gmsh_Parameters, 'Gmsh Parameters')
smesh.SetName(Renumber_1, 'Renumber_1')
smesh.SetName(Number_of_Segments_2, 'Number of Segments_2')
smesh.SetName(Quadrangle_Parameters_1, 'Quadrangle Parameters_1')
smesh.SetName(Length_Near_Vertex_1, 'Length Near Vertex_1')
smesh.SetName(MG_Tetra_Parameters_1, 'MG-Tetra Parameters_1')
smesh.SetName(Mesh_1.GetMesh(), 'Mesh_1')
smesh.SetName(Mesh_3.GetMesh(), 'Mesh_3')
smesh.SetName(Mesh_2.GetMesh(), 'Mesh_2')
smesh.SetName(symetry1_3, 'symetry1')
smesh.SetName(Group_9_1, 'Group_9')
smesh.SetName(symetry0_3, 'symetry0')
smesh.SetName(Group_7_3, 'Group_7')
smesh.SetName(outlet_3, 'outlet')
smesh.SetName(Group_5_3, 'Group_5')
smesh.SetName(inlet_3, 'inlet')
smesh.SetName(Group_3_3, 'Group_3')
smesh.SetName(Group_1_3, 'Group_1')
smesh.SetName(MEFISTO_2D.GetAlgorithm(), 'MEFISTO_2D')
smesh.SetName(MG_Tetra.GetAlgorithm(), 'MG-Tetra')
smesh.SetName(Group_9, 'Group_9')
smesh.SetName(NETGEN_3D.GetAlgorithm(), 'NETGEN 3D')
smesh.SetName(symetry1_2, 'symetry1')
smesh.SetName(NETGEN_2D.GetAlgorithm(), 'NETGEN 2D')
smesh.SetName(Group_7_2, 'Group_7')
smesh.SetName(NETGEN_1D_2D_3D.GetAlgorithm(), 'NETGEN 1D-2D-3D')
smesh.SetName(symetry0_2, 'symetry0')
smesh.SetName(CompositeSegment_1D.GetAlgorithm(), 'CompositeSegment_1D')
smesh.SetName(Group_5_2, 'Group_5')
smesh.SetName(outlet_2, 'outlet')
smesh.SetName(Group_3_2, 'Group_3')
smesh.SetName(inlet_2, 'inlet')
smesh.SetName(GMSH.GetAlgorithm(), 'GMSH')
smesh.SetName(Group_1_2, 'Group_1')
smesh.SetName(NETGEN_1D_2D.GetAlgorithm(), 'NETGEN 1D-2D')
smesh.SetName(PolyhedronPerSolid_3D.GetAlgorithm(), 'PolyhedronPerSolid_3D')
smesh.SetName(UseExisting_1D.GetAlgorithm(), 'UseExisting_1D')
smesh.SetName(Prism_3D.GetAlgorithm(), 'Prism_3D')
smesh.SetName(Hexa_3D.GetAlgorithm(), 'Hexa_3D')
smesh.SetName(Regular_1D.GetAlgorithm(), 'Regular_1D')
smesh.SetName(SegmentAroundVertex_0D, 'SegmentAroundVertex_0D')
smesh.SetName(Quadrangle_2D.GetAlgorithm(), 'Quadrangle_2D')
smesh.SetName(Sub_mesh_1, 'Sub-mesh_1')
smesh.SetName(wall_3, 'wall')
smesh.SetName(Group_16_1, 'Group_16')
smesh.SetName(strips_3, 'strips')
smesh.SetName(Group_14_1, 'Group_14')
smesh.SetName(Group_13_1, 'Group_13')
smesh.SetName(Group_1_1, 'Group_1')
smesh.SetName(symetry3_3, 'symetry3')
smesh.SetName(Group_2_1, 'Group_2')
smesh.SetName(Group_11_1, 'Group_11')
smesh.SetName(Group_3_1, 'Group_3')
smesh.SetName(symetry2_3, 'symetry2')
smesh.SetName(Group_4_1, 'Group_4')
smesh.SetName(Group_5_1, 'Group_5')
smesh.SetName(Group_6_1, 'Group_6')
smesh.SetName(Group_7_1, 'Group_7')
smesh.SetName(Sub_mesh_2, 'Sub-mesh_2')


if salome.sg.hasDesktop():
  salome.sg.updateObjBrowser()
